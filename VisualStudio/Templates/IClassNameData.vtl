#set($entity = $Neo.Entity)
#set($dataSourceName = $Neo.Model.Name)
#set($db = $entity.Database)
// --------------------------------------------------------------------------------------------------------------------
// <copyright file="model.cs" company="OnePoint Global">
//   Copyright (c) 2012 OnePoint Global Ltd. All rights reserved.
// </copyright>
// <summary>
//   This file was autogenerated and you should not edit it. It will be 
//   regenerated whenever the schema changes.
//   All changes should be made in ${Neo.Entity.ClassName}.cs and the mode.xml. 
// </summary>
// --------------------------------------------------------------------------------------------------------------------

#if($Neo.Entity.Namespace)
namespace $Neo.Entity.Namespace 
{
#end
using System;
using System.Collections.Generic;
    
using OnePoint.Data;
using OnePoint.Logging;
#foreach($ns in $entity.UsedNamespaces)
#if($ns != $entity.Namespace)
using $ns;
#end
#end

/// <summary>
/// The I${entity.ClassName}Data Interface Data Object Base
/// </summary>
public interface I${entity.ClassName}Data : IDisposable
{
#foreach($attribute in $entity.Attributes)
#if(!$attribute.IsHidden)
$attribute.DotNetType $attribute.DotNetName { get; set; }
#if($attribute.AllowsNull && $attribute.DotNetType != "System.String")
bool ${attribute.DotNetName}Specified { get; set; }
#end    
#end
#end

#foreach($rel in $entity.ToOneRelationships)
${rel.ForeignEntity.ClassName} $rel.DotNetName { get; }
#end
#foreach($rel in $entity.ToManyRelationships)
List<${rel.DotNetName}> ${rel.DotNetName} { get; }
#end
}

    
#if($Neo.Entity.Namespace)
}
#end